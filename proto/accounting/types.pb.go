// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/accounting/types.proto

package accounting

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Standard floating point data type can't be used in NeoFS due to inexactness
// of the result when doing lots of small number operations. To solve the lost
// precision issue, special `Decimal` format is used for monetary computations.
//
// Please see [The General Decimal Arithmetic
// Specification](http://speleotrove.com/decimal/) for detailed problem
// description.
type Decimal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number in the smallest Token fractions.
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// Precision value indicating how many smallest fractions can be in one
	// integer.
	Precision     uint32 `protobuf:"varint,2,opt,name=precision,proto3" json:"precision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	mi := &file_proto_accounting_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accounting_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_proto_accounting_types_proto_rawDescGZIP(), []int{0}
}

func (x *Decimal) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Decimal) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

var File_proto_accounting_types_proto protoreflect.FileDescriptor

const file_proto_accounting_types_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/accounting/types.proto\x12\x14neo.fs.v2.accounting\"=\n" +
	"\aDecimal\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x12\x1c\n" +
	"\tprecision\x18\x02 \x01(\rR\tprecisionBUZ2github.com/nspcc-dev/neofs-sdk-go/proto/accounting\xaa\x02\x1eNeo.FileStorage.API.Accountingb\x06proto3"

var (
	file_proto_accounting_types_proto_rawDescOnce sync.Once
	file_proto_accounting_types_proto_rawDescData []byte
)

func file_proto_accounting_types_proto_rawDescGZIP() []byte {
	file_proto_accounting_types_proto_rawDescOnce.Do(func() {
		file_proto_accounting_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_accounting_types_proto_rawDesc), len(file_proto_accounting_types_proto_rawDesc)))
	})
	return file_proto_accounting_types_proto_rawDescData
}

var file_proto_accounting_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_accounting_types_proto_goTypes = []any{
	(*Decimal)(nil), // 0: neo.fs.v2.accounting.Decimal
}
var file_proto_accounting_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_accounting_types_proto_init() }
func file_proto_accounting_types_proto_init() {
	if File_proto_accounting_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_accounting_types_proto_rawDesc), len(file_proto_accounting_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_accounting_types_proto_goTypes,
		DependencyIndexes: file_proto_accounting_types_proto_depIdxs,
		MessageInfos:      file_proto_accounting_types_proto_msgTypes,
	}.Build()
	File_proto_accounting_types_proto = out.File
	file_proto_accounting_types_proto_goTypes = nil
	file_proto_accounting_types_proto_depIdxs = nil
}
